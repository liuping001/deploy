# 目的文件夹，也可以不提供，默认为空。文件的目的地址为 dest_dir + dest
dest_dir: /tmp/test_deploy/

# 可以将所有主机定义在一个分组，执行一些机器初始化的工作
init_host:
  cmd:
    - "ls -l /tmp"

# 定义1个服务
server1:
  push:
    - src: test.py # 只能是文件
      dest: server1/ #这里填文件夹: server1/ 。 也可以填文件:server1/test.py，但上级目录需要存在
    # files 指定文件夹中要copy的文件列表
    - src: ./ # 不管带不带/都表示目录
      dest: server1 # 不管带不带/都表示目录
      files:
        - test.py
   # template模板替换配置文件
    - src: config.ini
      dest: server1/ #这里填文件夹: server1/ 。 也可以填文件:server1/test.py，但上级目录需要存在
      template: yes

  # start，stop，status默认会进入，dest_dir所在的文件，然后接着执行后面的命令。如果dest_dir为空，就进入用户目录了
  start: "cd server1 && nohup python test.py &"
  stop: "cd server1 && ps -ef|grep test.py|grep -v color|grep -v grep|awk '{print $2}'|xargs kill"
  state: "cd server1 && ps -ef|grep test.py|grep -v color|grep -v grep"
#  start_file: server1/start.sh
# 如果定义了start_file，start、stop、state命令将会失效
# 取而代之的是 start_file start； start_file stop; start_file state
# 如果没有定义start_file，也没有定义 start、stop、state。将会使用默认的start_file={{server_name}}/start.sh，如这里的server1

# 定义一个定时任务类型的服务
server2:
  psuh:
    - src: hello.sh
      dest: server2/
    - src: start.sh
      dest: server2/
  crontab:
    - {state: install, name: hello, minute: 5, hour: 1, job: /tmp/server2/hello.sh}